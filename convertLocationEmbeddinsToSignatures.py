#-----------------------------------------------------------------------------------------------------
# Description:
# This script converts the multiple outputs generated by 'createLocationEmbeddings.py'
# to a single pkl file with the following format:
# {article_title:{indices:[location_mentions], counts[locations_counts]}
#-----------------------------------------------------------------------------------------------------

import os
import sys
import pickle
from itertools import groupby

#------------------------------------------------------------------------
# For each line in the file, return a dictionary with the format
# article_id	article_title	location_mentions	locations_counts
# Adapted from 
# https://stackoverflow.com/questions/24662671/python-count-and-remove-duplicates-in-the-list-of-list
#------------------------------------------------------------------------
def countAndRemoveDuplicates(embedding):

	embedding = embedding.split('\t')
	article_id = embedding[0]
	article_title = embedding[1].replace(' ', '_')
	locations_in_article = embedding[2].split(';')
	locations_in_article = [item.replace('\n', '') for item in locations_in_article]

	location_mentions = []
	locations_counts = []
	for value, repeated in groupby(sorted(locations_in_article)):
		location_mentions.append(value)
		locations_counts.append(sum(1 for _ in repeated))

	dic = {} 
	#dic['article_id'] = article_id
	#dic['article_title'] = article_title
	dic['indices'] = location_mentions
	dic['counts'] = locations_counts

	return article_title, dic

#------------------------------------------------------------------------

if __name__ == '__main__':
	

	if len(sys.argv) != 3:
		print ("Incorrect number of arguments. Please provide path to input and output files.")

	pathForInputFiles = sys.argv[1]
	pathToOutputFile = sys.argv[2]

	n = 0
	allEmbeddingsDic = {}
	for root, dirs, files in os.walk(pathForInputFiles):
		for fileName in files:

			if not fileName.endswith('.txt'):
				continue

			print ("Converting {}".format(fileName))

			embeddinsInFile = open(os.path.join(root, fileName), 'r').readlines()
			for embedding in embeddinsInFile:
				
				try:
					title, dicAux = countAndRemoveDuplicates(embedding)
					allEmbeddingsDic[title] = dicAux 
				except Exception as e:
					print("Error: " + str(e))

	print ("Saving to file")
	pickle.dump(allEmbeddingsDic, open(pathToOutputFile, "wb" ) )

	print ("All done!")
	print (str(n) + " embeddins created so far.")
